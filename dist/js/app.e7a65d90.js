(function(){"use strict";var e={5809:function(e,a,t){var n=t(5130),i=t(6768);function o(e,a,t,n,o,s){const r=(0,i.g2)("router-view");return(0,i.uX)(),(0,i.Wv)(r)}var s={name:"App"},r=t(1241);const l=(0,r.A)(s,[["render",o]]);var u=l,c=t(1387);const d={class:"start-view"},h={class:"container"};function m(e,a,t,o,s,r){return(0,i.uX)(),(0,i.CE)("div",d,[(0,i.Lk)("div",h,[a[3]||(a[3]=(0,i.Lk)("h1",{class:"welcome-text"},"Welcome to Globe Rush!",-1)),(0,i.Lk)("form",{onSubmit:a[1]||(a[1]=(0,n.D$)(((...e)=>r.submitUsername&&r.submitUsername(...e)),["prevent"])),class:"form-container"},[(0,i.bo)((0,i.Lk)("input",{type:"text","onUpdate:modelValue":a[0]||(a[0]=e=>s.username=e),placeholder:"Enter your username",class:"username-input"},null,512),[[n.Jo,s.username]]),a[2]||(a[2]=(0,i.Lk)("button",{type:"submit",class:"submit-button"},[(0,i.Lk)("strong",null,"Start")],-1))],32)])])}t(4114);var p={data(){return{username:""}},methods:{async submitUsername(){if(this.username.trim())try{const e=await this.$axios.post("leaderboard.php",{action:"register",name:this.username});e.data.success?(localStorage.setItem("verification_id",e.data.uuid),localStorage.setItem("username",this.username),this.$router.push("/game")):alert(`Error: ${e.data.error}`)}catch(e){alert("An error occurred while registering. Please try again.")}else alert("Please enter a username!")}}};const g=(0,r.A)(p,[["render",m]]);var _=g,f=t(4232);const b={id:"floating-input"},y={class:"guessed-countries"},v={key:0},k={key:0,class:"modal"},w={class:"modal-content"},C={key:1,class:"modal2"},L={class:"modal-content2"},O={class:"podium"},S={key:0,class:"second"},E={class:"name"},J={class:"score"},N={key:1,class:"first"},j={class:"name"},A={class:"score"},x={key:2,class:"third"},M={class:"name"},z={class:"score"},G={class:"place"},D={class:"score"};function P(e,a,t,o,s,r){return(0,i.uX)(),(0,i.CE)(i.FK,null,[a[14]||(a[14]=(0,i.Lk)("header",{class:"app-header"},[(0,i.Lk)("h1",null,"Name all countries of the World!"),(0,i.Lk)("p",{class:"app-description"},' In this game, you must name as many countries as possible within 90 seconds. If you misspell a country\'s name, it won\'t be accepted, so be careful with your spelling! You can also use shortcuts like for example "USA" for "United States". The timer starts as soon as you enter the first country! ')],-1)),a[15]||(a[15]=(0,i.Lk)("div",{id:"map",style:{width:"100%",height:"100vh"}},null,-1)),(0,i.Lk)("div",b,[(0,i.Lk)("form",{onSubmit:a[1]||(a[1]=(0,n.D$)(((...e)=>r.submitCountrie&&r.submitCountrie(...e)),["prevent"]))},[(0,i.bo)((0,i.Lk)("input",{type:"text","onUpdate:modelValue":a[0]||(a[0]=e=>s.country=e),placeholder:"Enter country name and press Enter"},null,512),[[n.Jo,s.country]])],32)]),(0,i.Lk)("div",{class:(0,f.C4)(["counter",r.timerColor])},[(0,i.Lk)("strong",null,(0,f.v_)(r.minutes)+":"+(0,f.v_)(r.seconds),1)],2),(0,i.Lk)("div",{class:"leaderboard-button",onClick:a[2]||(a[2]=(...e)=>r.fetchLeaderboard&&r.fetchLeaderboard(...e))},"Leaderboard"),(0,i.Lk)("div",y,[a[7]||(a[7]=(0,i.Lk)("h3",null,"Guessed Countries",-1)),(0,i.Lk)("ul",null,[0===s.guessedCountries.length?((0,i.uX)(),(0,i.CE)("li",v," You haven't guessed any country yet ")):(0,i.Q3)("",!0),((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(s.guessedCountries,((e,a)=>((0,i.uX)(),(0,i.CE)("li",{key:a},(0,f.v_)(r.formatForDisplay(e)),1)))),128))])]),s.showModal?((0,i.uX)(),(0,i.CE)("div",k,[(0,i.Lk)("div",w,[(0,i.Lk)("span",{class:"close",onClick:a[3]||(a[3]=e=>s.showModal=!1)},"×"),a[9]||(a[9]=(0,i.Lk)("h2",null,"Time's up!",-1)),(0,i.Lk)("p",null,[(0,i.eW)(" Time is up! You guessed "+(0,f.v_)(s.guessedCountries.length)+" countries in total. That's better than ",1),(0,i.Lk)("span",{class:(0,f.C4)(r.percentageClass)},[(0,i.Lk)("strong",null,(0,f.v_)(s.percentage)+"%",1)],2),a[8]||(a[8]=(0,i.eW)(" of other players. "))]),(0,i.Lk)("button",{onClick:a[4]||(a[4]=(...e)=>r.fetchLeaderboard&&r.fetchLeaderboard(...e))},"Leaderboard"),(0,i.Lk)("button",{onClick:a[5]||(a[5]=(...e)=>r.reloadGame&&r.reloadGame(...e))},"Play Again")])])):(0,i.Q3)("",!0),s.showLeaderboard?((0,i.uX)(),(0,i.CE)("div",C,[(0,i.Lk)("div",L,[(0,i.Lk)("span",{class:"close",onClick:a[6]||(a[6]=e=>s.showLeaderboard=!1)},"×"),a[13]||(a[13]=(0,i.Lk)("h2",null,"Leaderboard",-1)),(0,i.Lk)("div",O,[s.leaderboard[1]?((0,i.uX)(),(0,i.CE)("div",S,[a[10]||(a[10]=(0,i.Lk)("div",{class:"position"},"2.",-1)),(0,i.Lk)("div",E,(0,f.v_)(s.leaderboard[1].name),1),(0,i.Lk)("div",J,(0,f.v_)(s.leaderboard[1].count),1)])):(0,i.Q3)("",!0),s.leaderboard[0]?((0,i.uX)(),(0,i.CE)("div",N,[a[11]||(a[11]=(0,i.Lk)("div",{class:"position"},"1.",-1)),(0,i.Lk)("div",j,(0,f.v_)(s.leaderboard[0].name),1),(0,i.Lk)("div",A,(0,f.v_)(s.leaderboard[0].count),1)])):(0,i.Q3)("",!0),s.leaderboard[2]?((0,i.uX)(),(0,i.CE)("div",x,[a[12]||(a[12]=(0,i.Lk)("div",{class:"position"},"3.",-1)),(0,i.Lk)("div",M,(0,f.v_)(s.leaderboard[2].name),1),(0,i.Lk)("div",z,(0,f.v_)(s.leaderboard[2].count),1)])):(0,i.Q3)("",!0)]),(0,i.Lk)("ul",null,[((0,i.uX)(!0),(0,i.CE)(i.FK,null,(0,i.pI)(s.leaderboard.slice(3),((e,a)=>((0,i.uX)(),(0,i.CE)("li",{key:e.name,class:(0,f.C4)([{striped:a%2===0,"non-striped":a%2!==0},"l_li"])},[(0,i.Lk)("span",G,(0,f.v_)(a+4)+". Place",1),(0,i.Lk)("span",null,(0,f.v_)(e.name),1),(0,i.Lk)("span",D,(0,f.v_)(e.count),1)],2)))),128))])])])):(0,i.Q3)("",!0)],64)}t(8992),t(4520),t(3949),t(1454);var X=t(144);const I={usa:"united_states_of_america",us:"united_states_of_america",united_states:"united_states_of_america",uk:"united_kingdom",uae:"united_arab_emirates",drc:"democratic_republic_of_the_congo",congo:"republic_of_the_congo",prc:"china",nz:"new_zealand"},$=["costa_rica","nicaragua","saint_martin","sint_maarten","haiti","dominican_republic","el_salvador","guatemala","cuba","honduras","united_states_of_america","canada","mexico","belize","panama","greenland","curaçao","aruba","the_bahamas","turks_and_caicos_islands","saint_pierre_and_miquelon","trinidad_and_tobago","grenada","saint_vincent_and_the_grenadines","barbados","saint_lucia","dominica","montserrat","antigua_and_barbuda","saint_kitts_and_nevis","united_states_virgin_islands","saint_barthélemy","puerto_rico","anguilla","british_virgin_islands","jamaica","cayman_islands","bermuda","indonesia","malaysia","cyprus","india","china","israel","palestine","lebanon","syria","south_korea","north_korea","bhutan","oman","uzbekistan","kazakhstan","tajikistan","mongolia","vietnam","cambodia","united_arab_emirates","georgia","azerbaijan","turkey","laos","kyrgyzstan","armenia","iraq","iran","qatar","saudi_arabia","pakistan","thailand","kuwait","east_timor","brunei","myanmar","bangladesh","afghanistan","turkmenistan","jordan","nepal","yemen","hong_kong","turkish_republic_of_northern_cyprus","siachen_glacier","philippines","sri_lanka","taiwan","japan","australian_indian_ocean_territories","singapore","bahrain","macau","chile","bolivia","peru","argentina","suriname","guyana","brazil","uruguay","ecuador","colombia","paraguay","venezuela","falkland_islands","ethiopia","south_sudan","somalia","kenya","malawi","tanzania","somaliland","morocco","western_sahara","republic_of_the_congo","democratic_republic_of_the_congo","namibia","south_africa","libya","tunisia","zambia","sierra_leone","guinea","liberia","central_african_republic","sudan","djibouti","eritrea","ivory_coast","mali","senegal","nigeria","benin","angola","botswana","zimbabwe","chad","algeria","mozambique","eswatini","burundi","rwanda","uganda","lesotho","cameroon","gabon","niger","burkina_faso","togo","ghana","guinea-bissau","egypt","mauritania","equatorial_guinea","the_gambia","madagascar","comoros","são_tomé_and_príncipe","cape_verde","france","ukraine","belarus","lithuania","russia","czech_republic","germany","estonia","latvia","norway","sweden","finland","luxembourg","belgium","north_macedonia","albania","kosovo","spain","denmark","romania","hungary","slovakia","poland","ireland","united_kingdom","greece","austria","italy","switzerland","netherlands","liechtenstein","serbia","croatia","slovenia","bulgaria","san_marino","monaco","andorra","montenegro","bosnia_and_herzegovina","portugal","moldova","vatican_city","iceland","malta","jersey","guernsey","isle_of_man","åland","faroe_islands","papua_new_guinea","australia","fiji","new_zealand","new_caledonia","pitcairn_islands","french_polynesia","kiribati","marshall_islands","norfolk_island","cook_islands","tonga","wallis_and_futuna","samoa","solomon_islands","tuvalu","nauru","federated_states_of_micronesia","vanuatu","niue","american_samoa","palau","guam","northern_mariana_islands","ashmore_and_cartier_islands","antarctica","french_southern_and_antarctic_lands","seychelles","heard_island_and_mcdonald_islands","saint_helena","mauritius","british_indian_ocean_territory","maldives","south_georgia_and_the_south_sandwich_islands"];function F(e){return e=String(e).toLowerCase(),e=e.replaceAll(" ","_"),e}function T(e){const a=e.trim().toLowerCase().replace(/\s+/g,"_");if($.includes(a))return e;for(const[t,n]of Object.entries(I))if(a===t.toLowerCase()||a===n.toLowerCase())return n;return!1}var U={name:"App",data(){return{map:(0,X.IJ)(null),geojson:[],guessedCountries:[],country:"",showOutline:!0,showModal:!1,timeLeft:90,leaderboard:[],showLeaderboard:!1,percentage:20,timeOver:!1}},computed:{formatForDisplay(){return e=>e.split(/_| /).map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")},percentageClass(){return this.percentage>=90?"high-percentage":this.percentage>=50?"medium-percentage":"low-percentage"},minutes(){return Math.floor(this.timeLeft/60)},seconds(){return this.timeLeft%60<10?"0"+this.timeLeft%60:this.timeLeft%60},timerColor(){return this.timeLeft<10?"red":this.timeLeft<30?"orange":""}},async mounted(){localStorage.getItem("verification_id")||this.$router.push("/"),await this.initMap()},methods:{fetchLeaderboard(){this.$axios("leaderboard.php").then((e=>{this.leaderboard=e.data,this.showLeaderboard=!0}))},startCountdown(){const e=setInterval((async()=>{this.timeLeft>0?this.timeLeft--:(clearInterval(e),await this.calculatePercentage(),this.showModal=!0,this.timeOver=!0,this.$axios.post("leaderboard.php",{action:"update",uuid:localStorage.getItem("verification_id"),count:this.guessedCountries.length}))}),1e3)},async initMap(){await window.mapkit.init({authorizationCallback:function(e){fetch("https://alex.polan.sk/name-the-countries/verify.php").then((e=>e.text())).then(e)},language:"en"});const e=new window.mapkit.CoordinateRegion(new window.mapkit.Coordinate(28,15),new window.mapkit.CoordinateSpan(180,360)),a=new window.mapkit.Map("map",{mapType:window.mapkit.Map.MapTypes.Satellite,center:new window.mapkit.Coordinate(25,15),region:e});a.showsCompass=window.mapkit.FeatureVisibility.Visible,this.map=a;let t={itemForPolygon:e=>{const t=this.showOutline?.8:0,n=this.showOutline?1:0;return e.style=new window.mapkit.Style({strokeColor:"#000",strokeOpacity:t,lineWidth:n,fillOpacity:.8,fillColor:"#CACACA"}),a.addOverlay(e),e},geoJSONDidComplete:function(e,a){console.log("GeoJSONDelegate.geoJSONDidComplete"),console.log(e),console.log(a)},geoJSONDidError:function(e,a){console.log("GeoJSONDelegate.geoJSONDidError"),console.log(e),console.log(a)}};if(0===this.geojson.length)this.$axios.get("countries.php").then((e=>{let a=e.data;this.geojson=JSON.parse(JSON.stringify(e.data)),window.mapkit.importGeoJSON(a,t)}));else{const e=JSON.parse(JSON.stringify(this.geojson));let a=e;a.features.forEach((e=>{F(e.properties.NAME)!==F(this.countryPair.from)&&F(e.properties.NAME)!==F(this.countryPair.to)||(e.properties.count=15)})),window.mapkit.importGeoJSON(a,t)}},submitCountrie(){this.timeOver||(this.country.trim()?0!=T(this.country)?(this.country=T(this.country),0===this.guessedCountries.length&&this.startCountdown(),this.guessedCountries.includes(this.country)||(this.guessedCountries.push(this.country),this.updateMap(),this.country="")):alert(this.country+" is not a valid country name!"):alert("Please enter a country name!"))},updateMap(){let e={itemForPolygon:e=>{const a=this.showOutline?.8:0,t=this.showOutline?1:0;return e.style=new window.mapkit.Style({strokeColor:"#000",strokeOpacity:a,lineWidth:t,fillOpacity:.8,fillColor:"#CACACA"}),this.map.addOverlay(e),e},itemForFeature:(e,a)=>{const t=a.properties.guessed,n=t?"#008000":"#CACACA",i=this.showOutline?.8:0,o=this.showOutline?1:0;return e.data={name:a.properties.name_en,isGuessed:t},e.style=new window.mapkit.Style({fillOpacity:.7,lineWidth:o,strokeOpacity:i,fillColor:n}),e},geoJSONDidComplete:function(e,a){console.log("GeoJSONDelegate.geoJSONDidComplete"),console.log(e),console.log(a)},geoJSONDidError:function(e,a){console.log("GeoJSONDelegate.geoJSONDidError"),console.log(e),console.log(a)}};if(0===this.geojson.length)this.$axios.get("countries.php").then((a=>{this.geojson=JSON.parse(JSON.stringify(a.data));let t=a.data;t.features.forEach((e=>{this.formatedGuessedCountries(this.guessedCountries).includes(F(e.properties.name_en))&&(console.log(e.properties.name_en+" is guessed!"),e.properties.guessed=!0)})),this.map.overlays.forEach((e=>this.map.removeOverlay(e))),window.mapkit.importGeoJSON(t,e)}));else{const a=JSON.parse(JSON.stringify(this.geojson));let t=a;console.log(this.guessedCountries),t.features.forEach((e=>{this.formatedGuessedCountries(this.guessedCountries).includes(F(e.properties.name_en))&&(console.log(e.properties.name_en+" is guessed!"),e.properties.guessed=!0)})),this.map.overlays.forEach((e=>this.map.removeOverlay(e))),window.mapkit.importGeoJSON(t,e)}},reloadGame(){this.guessedCountries=[],this.timeLeft=90,this.timeOver=!1,this.showModal=!1,this.updateMap()},formatedGuessedCountries(e){return e.map((e=>F(e)))},async calculatePercentage(){await this.$axios("leaderboard.php").then((e=>{const a=e.data,t=this.guessedCountries.length,n=a.filter((e=>e.count<t)).length,i=a.length;this.percentage=Math.round(n/i*100)}))}}};const W=(0,r.A)(U,[["render",P],["__scopeId","data-v-24c73642"]]);var Q=W;const V=[{path:"/",name:"StartView",component:_},{path:"/game",name:"GameView",component:Q}],q=(0,c.aE)({history:(0,c.LA)("/name-the-countries/"),routes:V});var K=q,R=t(4373);const Y=R.A.create({baseURL:"https://alex.polan.sk/name-the-countries/"});var B=Y;const H=(0,n.Ef)(u);H.config.globalProperties.$axios=B,H.use(K),H.mount("#app")}},a={};function t(n){var i=a[n];if(void 0!==i)return i.exports;var o=a[n]={exports:{}};return e[n].call(o.exports,o,o.exports,t),o.exports}t.m=e,function(){var e=[];t.O=function(a,n,i,o){if(!n){var s=1/0;for(c=0;c<e.length;c++){n=e[c][0],i=e[c][1],o=e[c][2];for(var r=!0,l=0;l<n.length;l++)(!1&o||s>=o)&&Object.keys(t.O).every((function(e){return t.O[e](n[l])}))?n.splice(l--,1):(r=!1,o<s&&(s=o));if(r){e.splice(c--,1);var u=i();void 0!==u&&(a=u)}}return a}o=o||0;for(var c=e.length;c>0&&e[c-1][2]>o;c--)e[c]=e[c-1];e[c]=[n,i,o]}}(),function(){t.n=function(e){var a=e&&e.__esModule?function(){return e["default"]}:function(){return e};return t.d(a,{a:a}),a}}(),function(){t.d=function(e,a){for(var n in a)t.o(a,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:a[n]})}}(),function(){t.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){t.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)}}(),function(){t.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={524:0};t.O.j=function(a){return 0===e[a]};var a=function(a,n){var i,o,s=n[0],r=n[1],l=n[2],u=0;if(s.some((function(a){return 0!==e[a]}))){for(i in r)t.o(r,i)&&(t.m[i]=r[i]);if(l)var c=l(t)}for(a&&a(n);u<s.length;u++)o=s[u],t.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return t.O(c)},n=self["webpackChunkglobe_rush"]=self["webpackChunkglobe_rush"]||[];n.forEach(a.bind(null,0)),n.push=a.bind(null,n.push.bind(n))}();var n=t.O(void 0,[504],(function(){return t(5809)}));n=t.O(n)})();
//# sourceMappingURL=app.e7a65d90.js.map